openapi: 3.0.0
info:
  title: Web Page Management API
  version: 1.0.0
  description: API for creating and managing web pages through chat interactions.

servers:
  - url: http://localhost:5000
    description: Development server

paths:
  /api/session:
    post:
      summary: Initiates a session
      description: Creates a new session with initial requirements for web page creation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requirements:
                  type: string
                  description: Detailed text of user's web page requirements.
      responses:
        '201':
          description: Session created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
  /api/session/async:
    post:
      summary: Initiate session asynchronously
      description: Creates a new session asynchronously with initial requirements for web page creation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requirements:
                  type: string
                  description: Detailed text of user's web page requirements.
      responses:
        '201':
          description: Session created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'

  /api/session/{session_id}:
    get:
      summary: Retrieve a session
      description: Fetches a session object using the session ID.
      parameters:
        - in: path
          name: session_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Session data retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '404':
          description: Session not found.

  /api/session/{session_id}/webpage/{webpage_id}/comments:
    put:
      summary: Add comments to a webpage
      description: Allows a user to add comments to a specific webpage in a session.
      parameters:
        - in: path
          name: session_id
          required: true
          schema:
            type: string
        - in: path
          name: webpage_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                global:
                  type: string
                  description: General comment about the webpage.
                element_comments:
                  type: object
                  additionalProperties:
                    type: string
      responses:
        '200':
          description: Web page updated with comments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebPage'

  /api/session/{session_id}/webpage/{webpage_id}/update:
    put:
      summary: Initiate webpage update
      description: Initiates an asynchronous update of the webpage.
      parameters:
        - in: path
          name: session_id
          required: true
          schema:
            type: string
        - in: path
          name: webpage_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Webpage update initiated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebPage'

  /api/session/{session_id}/webpage/{webpage_id}:
    get:
      summary: Get a webpage
      description: Fetches a webpage object in a session to check its generation status.
      parameters:
        - in: path
          name: session_id
          required: true
          schema:
            type: string
        - in: path
          name: webpage_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Webpage data retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebPage'
        '404':
          description: Webpage not found.

components:
  schemas:
    Session:
      type: object
      properties:
        id:
          type: string
        initial_requirements:
          type: string
        web_pages:
          type: array
          items:
            $ref: '#/components/schemas/WebPage'
        created_at:
          type: string
          format: date-time
    WebPage:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        html:
          type: string
        css:
          type: string
        javascript:
          type: string
        created_at:
          type: string
          format: date-time
        in_processing:
          type: boolean
        comments:
          type: object
          properties:
            global_comment:
              type: string
            element_comments:
              type: object
              additionalProperties:
                type: string
